// <auto-generated />
using System;
using Lombard.DAL;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace Lombard.DAL.Migrations
{
    [DbContext(typeof(EFDbContext))]
    [Migration("20190416152710_init")]
    partial class init
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "2.1.8-servicing-32085");

            modelBuilder.Entity("Lombard.DAL.Models.Item", b =>
                {
                    b.Property<int?>("ItemId")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("Name");

                    b.Property<decimal>("PurchasePrice");

                    b.Property<double>("Quantity");

                    b.Property<decimal>("SellingPrice");

                    b.Property<int?>("TransactionId");

                    b.Property<string>("Unit");

                    b.HasKey("ItemId");

                    b.HasIndex("TransactionId");

                    b.ToTable("Items");

                    b.HasData(
                        new { ItemId = 1, Name = "Kubek", PurchasePrice = 15m, Quantity = 2.0, SellingPrice = 0m },
                        new { ItemId = 2, Name = "Długopis", PurchasePrice = 5m, Quantity = 15.0, SellingPrice = 0m },
                        new { ItemId = 3, Name = "Kawa", PurchasePrice = 40m, Quantity = 5.0, SellingPrice = 0m },
                        new { ItemId = 4, Name = "Ciastka", PurchasePrice = 2m, Quantity = 85.0, SellingPrice = 0m },
                        new { ItemId = 5, Name = "Ładowarka", PurchasePrice = 30m, Quantity = 2.0, SellingPrice = 0m },
                        new { ItemId = 6, Name = "Krzesło", PurchasePrice = 20m, Quantity = 6.0, SellingPrice = 0m },
                        new { ItemId = 7, Name = "Piwo", PurchasePrice = 6m, Quantity = 666.0, SellingPrice = 0m },
                        new { ItemId = 8, Name = "Pizza", PurchasePrice = 25m, Quantity = 85.0, SellingPrice = 0m }
                    );
                });

            modelBuilder.Entity("Lombard.DAL.Models.Transaction", b =>
                {
                    b.Property<int?>("TransactionId")
                        .ValueGeneratedOnAdd();

                    b.Property<DateTime>("TransactionDate");

                    b.Property<int>("TransactionType");

                    b.HasKey("TransactionId");

                    b.ToTable("Transactions");

                    b.HasData(
                        new { TransactionId = 1, TransactionDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified), TransactionType = 2 },
                        new { TransactionId = 2, TransactionDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified), TransactionType = 2 },
                        new { TransactionId = 3, TransactionDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified), TransactionType = 1 },
                        new { TransactionId = 4, TransactionDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified), TransactionType = 1 }
                    );
                });

            modelBuilder.Entity("Lombard.DAL.Models.TransactionItem", b =>
                {
                    b.Property<int?>("TransactionItemId")
                        .ValueGeneratedOnAdd();

                    b.Property<int>("ItemId");

                    b.Property<int>("TransactionId");

                    b.HasKey("TransactionItemId");

                    b.HasIndex("ItemId");

                    b.HasIndex("TransactionId");

                    b.ToTable("TransactionsItems");

                    b.HasData(
                        new { TransactionItemId = 1, ItemId = 1, TransactionId = 1 },
                        new { TransactionItemId = 2, ItemId = 2, TransactionId = 1 },
                        new { TransactionItemId = 3, ItemId = 3, TransactionId = 2 },
                        new { TransactionItemId = 4, ItemId = 4, TransactionId = 2 },
                        new { TransactionItemId = 5, ItemId = 5, TransactionId = 3 },
                        new { TransactionItemId = 6, ItemId = 6, TransactionId = 3 },
                        new { TransactionItemId = 7, ItemId = 7, TransactionId = 4 },
                        new { TransactionItemId = 8, ItemId = 8, TransactionId = 4 }
                    );
                });

            modelBuilder.Entity("Lombard.DAL.Models.Item", b =>
                {
                    b.HasOne("Lombard.DAL.Models.Transaction")
                        .WithMany("Items")
                        .HasForeignKey("TransactionId");
                });

            modelBuilder.Entity("Lombard.DAL.Models.TransactionItem", b =>
                {
                    b.HasOne("Lombard.DAL.Models.Item", "Item")
                        .WithMany()
                        .HasForeignKey("ItemId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("Lombard.DAL.Models.Transaction", "Transaction")
                        .WithMany()
                        .HasForeignKey("TransactionId")
                        .OnDelete(DeleteBehavior.Cascade);
                });
#pragma warning restore 612, 618
        }
    }
}
